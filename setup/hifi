#!/bin/bash

HIFIBASEDIR="/opt/hifi"

function doContinue() {
ANS=""

while [[ ! $ANS =~ ^([yY][eE][sS]|[yY])$ ]]
	do
		if [[ $ANS =~ ^([nN][oO]|[nN])$ ]]
		then
			return 1
		else
			read -p "Continue y/n? " ANS
		fi

		if [[ $ANS =~ ^([yY][eE][sS]|[yY])$ ]]
		then
		    return 0
		fi
done

}

function setPerms()  {
  if [ -d "$HIFIBASEDIR/live" ]; then
    chown -R hifi:hifi $HIFIBASEDIR/live
  fi
}

function getHelp() {
    echo " --save : Creates a backup of the live codebase"
    echo " --status : give status info on the hifi.service"
    echo " --update : Creates a backup of the current live folder then updates the code."
    echo " --update-hifi-server : Updates this build tool."
    echo " --restore : Restore code from one of the last backups."
    echo " --stop : stops Hifi."
    echo " --start : Starts Hifi."
    echo " --restart : Restarts Hifi."
}

function doSave() {
    STAMP=`date +%Y-%m-%d_%H-%M-%S`

    echo "Saving..."

    tar -zcvf $HIFIBASEDIR/backups/BACKUP_$STAMP.tar.gz -C $HIFIBASEDIR/live/*
    echo "DONE."
}

function getStatus() {
    systemctl status domain-server.service
    systemctl status assignment-client.service
}

function doUpdate() {


    if doContinue $1;
        then
            doSave
            stopHifi
            cd $HIFIBASEDIR/source

            git fetch --tags
            LATEST=$(git describe --abbrev=0 --tags)
            git checkout tags/$LATEST

            rm -rf $HIFIBASEDIR/build/*

            cd $HIFIBASEDIR/build
            cmake3 -DGET_LIBOVR=1 $HIFIBASEDIR/source

            make domain-server && make assignment-client

            rm -rf $HIFIBASEDIR/live/*

            cp -R $HIFIBASEDIR/build/* $HIFIBASEDIR/live

            setPerms
            startHifi
        else
            exit
    fi

}

function updateHifiServer() {
    cd $HIFIBASEDIR/hifi-server

    git pull
    yes | cp -f $HIFIBASEDIR/hifi-server/setup/assignment-client.service /etc/systemd/system/assignment-client.service
    yes | cp -f $HIFIBASEDIR/hifi-server/setup/domain-server.service /etc/systemd/system/domain-server.service
    systemctl daemon-reload
    yes | cp -f $HIFIBASEDIR/hifi-server/setup/hifi /usr/local/bin/hifi

}

function doRestore() {

    echo "Listing backup files:"

    find /opt/hifi/backups/ -type f -printf "%f\n"

    read -p "File?: " CHOSENFILE
    echo "Using: " $CHOSENFILE
    sleep 1


    RESTOREFILEPATH="$HIFIBASEDIR/backups/$CHOSENFILE"



if doContinue $1;
    then
        stopHifi
        rm -rf $HIFIBASEDIR/live/*
        tar -zxvf $RESTOREFILEPATH -C $HIFIBASEDIR/live
        echo "Restored"
        startHifi
    else
        exit
fi
}

function startHifi() {
    systemctl start domain-server.service
    systemctl start assignment-client.service
}

function stopHifi() {
    systemctl stop domain-server.service
    systemctl stop assignment-client.service
}

function restartHifi() {
    systemctl restart domain-server.service
    systemctl restart assignment-client.service
}

if [ "$2" != "" ];
then
    echo "Single argument only."
    exit
fi

case $1 in
    --help)
        getHelp
        exit
        ;;
    --save)
        doSave
        ;;
    --status)
        getStatus
        ;;
    --update)
        doUpdate
        ;;
    --update-hifi-server)
        updateHifiServer
        ;;
    --restore)
        doRestore
        ;;
    --start)
        startHifi
        ;;
    --stop)
        stopHifi
        ;;
    --restart)
        restartHifi
        ;;
    *)
        echo "ERROR: unknown parameter \"$1\""
        usage
        exit 1
        ;;
    esac
    shift
exit